{"version":3,"sources":["components/modules/FormCotizador.js","helpers.js","components/modules/Resume.js","components/modules/Result.js","components/Cotizador.js","serviceWorker.js","index.js"],"names":["FormCotizador","brandRef","React","createRef","yearRef","planRef","quoteSafe","e","preventDefault","infoAuto","brand","_this","current","value","year","plan","props","react_default","a","createElement","className","action","onSubmit","this","name","ref","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resume","showResume","_this$props$infoAuto","Result","result","Message","concat","key","Cotizador","state","information","data","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","increment","obtenerPlan","parseFloat","toFixed","setState","modules_FormCotizador","modules_Resume","modules_Result","Boolean","window","location","hostname","match","ReactDOM","render","components_Cotizador","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6da1ef68.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass FormCotizador extends React.Component{\r\n\r\n\r\n   brandRef = React.createRef();\r\n   yearRef  = React.createRef();\r\n   planRef  = React.createRef();\r\n\r\n   \r\n   quoteSafe = (e) => {\r\n\r\n      e.preventDefault(); \r\n      \r\n      // Obtener Datos\r\n      const infoAuto = {\r\n         'brand'  : this.brandRef.current.value,\r\n         'year'   : this.yearRef.current.value,\r\n         'plan'   : this.planRef.current.value\r\n      }\r\n\r\n      this.props.quoteSafe(infoAuto);\r\n\r\n      // Resetea el Formulario\r\n      // e.currentTarget.reset();\r\n      \r\n   }\r\n\r\n   render(){\r\n\r\n      return (\r\n\r\n         <div className=\"uk-text-center\">\r\n\r\n            <h1>Cotizador Seguro de Auto</h1>\r\n\r\n            <form action=\"#\" className=\"cotizar-auto\" onSubmit={this.quoteSafe}>\r\n\r\n               <div className=\"uk-child-width-1-3@m uk-grid uk-grid-small\">\r\n                  <div className=\"uk-form-controls\">\r\n                     <label>Marca</label>\r\n                     <select className=\"uk-select\" name=\"brand\" ref={this.brandRef}>\r\n                        <option value=\"\">Seleccione</option>\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                     </select>\r\n                  </div>\r\n\r\n                  <div className=\"uk-form-controls\">\r\n                     <label>A침o</label>\r\n                     <select className=\"uk-select\" name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"\">Seleccione</option>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                     </select>\r\n                  </div>\r\n\r\n                  <div className=\"uk-form-controls\">\r\n                     <label>Plan</label>\r\n                     <select className=\"uk-select\" name=\"plan\" ref={this.planRef}>\r\n                        <option value=\"\">Seleccione</option>\r\n                        <option value=\"Basico\">B치sico</option>\r\n                        <option value=\"Completo\">Completo</option>\r\n                     </select>\r\n                  </div>\r\n                  \r\n               </div>\r\n\r\n               <button className=\"uk-button uk-button-primary uk-margin uk-width-1-1@m\">Cotizar</button>\r\n\r\n            </form>\r\n\r\n         </div>\r\n      );\r\n\r\n   }\r\n\r\n}\r\n\r\n\r\nexport default FormCotizador\r\n\r\n","export function obtenerDiferenciaAnio(year) {\r\n   return new Date().getFullYear() - year;\r\n}\r\n\r\nexport function calcularMarca( modelo ) {\r\n    let incremento;\r\n\r\n    switch (modelo) {\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\nexport function obtenerPlan( plan ) {\r\n    return (plan === 'Basico') ? 1.20 : 1.50;\r\n}\r\n\r\nexport function primeraMayuscula(texto) {\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}\r\n","import React, { Component } from 'react'\r\nimport { primeraMayuscula } from '../../helpers';\r\n\r\n\r\nclass Resume extends Component {\r\n\r\n   showResume = () => {\r\n\r\n      const {brand, year, plan} = this.props.infoAuto;\r\n\r\n      if(!brand || !year || !plan) return null;\r\n\r\n      return (\r\n\r\n         <div className=\"uk-card uk-card-secondary uk-padding-small uk-margin-small\">\r\n            <h5 className=\"uk-text-uppercase uk-text-center\">Resumen cotizaci칩n</h5>\r\n            <table className=\"uk-table uk-table-small\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Marca</th>\r\n                     <th>A침o</th>\r\n                     <th>Plan</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  <tr>\r\n                     <td>{ primeraMayuscula(brand) }</td>\r\n                     <td>{ primeraMayuscula(year) }</td>\r\n                     <td>{ primeraMayuscula(plan) }</td>\r\n                  </tr>\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      );\r\n      \r\n   }\r\n\r\n   render() {\r\n\r\n      return(\r\n         <div>\r\n            { this.showResume() }\r\n         </div>\r\n\r\n      );\r\n\r\n   }\r\n}\r\n\r\nexport default Resume;","import React, { Component } from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nclass Result extends Component {\r\n\r\n   render() {\r\n\r\n      const result = this.props.result;\r\n\r\n      let Message = (!result) ? `Seleccione una marca, a침o y tipo de seguro` : `El total es: $ ${result}`;\r\n\r\n      return (\r\n\r\n         <div className=\"uk-card uk-card-primary uk-padding-small\">\r\n            <h5 className=\"uk-text-uppercase uk-text-center animation\" key={result}>{Message}</h5>\r\n         </div>\r\n         \r\n      );\r\n\r\n\r\n\r\n   }\r\n\r\n   \r\n   \r\n}\r\n\r\n\r\nexport default Result;","import React, { Component } from 'react'\r\nimport Formulario from './modules/FormCotizador';\r\nimport '../css/modules/cotizador.css';\r\nimport Resume from './modules/Resume';\r\nimport Result from './modules/Result';\r\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../helpers';\r\n\r\n\r\nclass Cotizador extends Component{\r\n\r\n   state = {\r\n      result : '',\r\n      information : {}\r\n   }\r\n\r\n   quoteSafe = (data) => {\r\n\r\n      const {brand, year, plan} = data;\r\n\r\n      // Precio base del seguro de 500.000\r\n      let result = 500000;      \r\n\r\n      // Obtener diferencia de a침os      \r\n      const difference = obtenerDiferenciaAnio(year);\r\n\r\n      // Por cada a침o restar el 3% del valor base del seguro\r\n      result -= ((difference * 3) * result) / 100;\r\n\r\n      // Aumenta costo base del seguro seg칰n el tipo de marca del vehiculo\r\n      result = calcularMarca(brand) * result;\r\n\r\n      // Plan B치sico aumenta el valor del seguro un 20% y el completo un 50%\r\n      let increment = obtenerPlan(plan);\r\n\r\n      result = parseFloat(increment * result).toFixed(2);\r\n\r\n      // Mostrar Resumen del seguro\r\n      const infoAuto = {\r\n         brand  : brand,\r\n         year   : year,\r\n         plan   : plan\r\n      }\r\n\r\n      // Actualiza el State\r\n      this.setState({\r\n         result: result,\r\n         information : infoAuto\r\n      })\r\n\r\n   }\r\n\r\n   render(){\r\n\r\n      return(\r\n   \r\n         <div className=\"uk-container-small container\">\r\n   \r\n            <div className=\"form-section\">\r\n               <Formulario \r\n                  quoteSafe={this.quoteSafe} \r\n               />\r\n            </div>\r\n   \r\n            <div className=\"resume-section\">\r\n               <Resume \r\n                  infoAuto={this.state.information} \r\n               />\r\n            </div>\r\n\r\n            <div className=\"result-section\">\r\n               <Result\r\n                  result={this.state.result} \r\n                />\r\n            </div>\r\n   \r\n         </div>\r\n   \r\n   \r\n      );\r\n   }\r\n\r\n\r\n}\r\n\r\nexport default Cotizador;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'uikit/dist/css/uikit.css';\nimport './css/modules/cotizador.css';\nimport Cotizador from './components/Cotizador';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Cotizador />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}